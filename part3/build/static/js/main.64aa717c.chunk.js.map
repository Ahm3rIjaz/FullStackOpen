{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/ShowPersons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","filter","handleFilterChange","Person","person","deletePer","name","number","onClick","ShowPersons","persons","map","includes","id","baseUrl","request","axios","get","nonExisting","then","response","data","concat","newPerson","post","changedPerson","put","delete","Notification","message","className","App","useState","setPersons","setFilter","setNewName","setNewNumber","errorMessage","setErrorMessage","useEffect","personsServive","initialData","event","target","preventDefault","personFound","find","window","confirm","updatedPerson","catch","error","setTimeout","returnedNote","personToDelete","updatedData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64aa717c.chunk.js","sourcesContent":["const PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n    return (\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} /></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","const Filter = ({filter, handleFilterChange}) => {\n    return (\n        <div>\n            filter shown with<input value={filter} onChange={handleFilterChange} />\n        </div>\n    )\n}\n\nexport default Filter","const Person = ({person, deletePer}) => {\n    return (\n        <div>\n            {person.name} {person.number} <button onClick={() => deletePer(person)}>delete</button>\n        </div>\n    )\n}\n\nconst ShowPersons = ({persons, filter, deletePer}) => {\n    return (\n        persons.map(person => \n            person.name.includes(filter) ? <Person key={person.id} deletePer={deletePer} person={person} /> : ''\n        )\n    )\n}\n\nexport default ShowPersons","import axios from \"axios\"\n\nconst baseUrl = '/api/persons/'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = { \n        \"name\": \"Non Existent\", \n        \"number\": \"0900-78601\",\n        \"id\": 1000\n      }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst update = (id, changedPerson) => {\n    const request = axios.put(`${baseUrl}${id}`, changedPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => axios.delete(`${baseUrl}${id}`)\n\nexport default {getAll, create, update, deletePerson}","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport ShowPersons from './components/ShowPersons'\nimport personsServive from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ filter, setFilter ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personsServive\n      .getAll().then(initialData => setPersons(initialData))\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const personFound = persons.find(person => person.name === newName)\n    if (personFound) {\n      if (window.confirm(`${newName} is already added to phonebook\\nUpdate the number with the new one?`)) {\n        const changedPerson = {...personFound, number: newNumber}\n        personsServive\n          .update(personFound.id, changedPerson).then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== personFound.id ? person: updatedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            setErrorMessage(error.response.data[\"error\"])\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    }\n    else {\n      const newPerson = {name: newName, number: newNumber}\n      personsServive\n        .create(newPerson).then(returnedNote => {\n          setPersons(persons.concat(returnedNote))\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data[\"error\"])\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 10000)\n        })\n    }\n  }\n\n  const deletePer = (personToDelete) => {\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      personsServive\n        .deletePerson(personToDelete.id).then(updatedData => {\n          setPersons(persons.filter(person => person.id !== personToDelete.id))\n        })\n        .catch(error => {\n          setErrorMessage(`'${personToDelete.name}' was already removed from server`)\n            setTimeout(() => {\n              setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== personToDelete.id))\n        })\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <ShowPersons deletePer={deletePer} persons={persons} filter={filter} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}